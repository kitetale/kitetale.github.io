{"version":3,"file":"component---works-snapshot-mdx-cf2d14547444f24c0dad.js","mappings":"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","sources":["webpack://ashley-kim/./works/snapshot.mdx","webpack://ashley-kim/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { infogrid, overview, closerLineHeight, infos, info, orange, subTitle } from \"../src/pages/works/WorkPage.module.css\";\nimport depthCam from \"../src/images/snapshot/depthCam.png\";\nimport pointCloud from \"../src/images/snapshot/pointCloud.gif\";\nimport depthInfo from \"../src/images/snapshot/depthInfo.gif\";\nimport buckets from \"../src/images/snapshot/bucket.gif\";\nimport allViews from \"../src/images/snapshot/demo_allview.gif\";\nimport final from \"../src/images/snapshot/snapshot.gif\";\nimport exhibition1 from \"../src/images/snapshot/display.jpg\";\nimport exhibition2 from \"../src/images/snapshot/print.jpg\";\nimport exhibition3 from \"../src/images/snapshot/morePrints.jpg\";\nimport exhibition4 from \"../src/images/snapshot/printing.gif\";\nexport const _frontmatter = {\n  \"title\": \"Snapshot\",\n  \"description\": \"Snapshot is a Kinect-based project that displays a composite image of what was captured over time through depth.\",\n  \"title_color\": \"#565252\",\n  \"hero_img\": \"../src/images/snapshot/snapshot_hero.png\",\n  \"hero_img_alt\": \"One output of snapshot taken in a bedroom\",\n  \"hero_img_description\": \"Snapshot Example\",\n  \"local_imgs\": [\"../src/images/snapshot/snapshot.png\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <div className={infogrid}>\n      <div className={overview}>\n        <div>\n          <p><strong parentName=\"p\">{`Overview`}</strong></p>\n        </div>\n        <div className={closerLineHeight}>\nSnapshot is a Kinect-based project that displays a composite image of what was captured over time through depth. Each layer that builds up the image contains the outline of objects captured at different depth range at different time. The layers are organized by time: The oldest capture is at the background and the newest capture is at the foreground.\n        </div>\n      </div>\n      <div className={infos}>\n        <div className={info}>\n          <div>\n            <p><strong parentName=\"p\">{`Duration `}</strong></p>\n          </div>\n          <div className={closerLineHeight}> \nNov 22 - Dec 6,2022 <br /> (2 weeks)\n          </div>\n        </div>\n        <div className={info}>\n          <div>\n            <p><strong parentName=\"p\">{`Tool `}</strong></p>\n          </div>\n          <div className={closerLineHeight}> \nopenFrameworks <br /> Kinect <br /> Thermal Printer\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className={subTitle}>\nInspiration\n    </div>\n    <div style={{\n      \"marginBottom\": \"3rem\"\n    }}>\nExtending the from <i>Travel Over Time</i> project, I wanted to further find a way to capture a location over time.\nDepending on the time of the day, the same location may be empty or extremely crowded. \nSometimes an unexpected passes by the location, but it would be only seen at that specific time. \nWondering what the output would look like if each depth layer is the capture of the same location from different point of time, \nI developed a program that separately saves the kinect input image by depth range and compiles randomly selected images per layer \nfrom the past in a chronological order.\n    </div>\n    <div className={subTitle}>\nProcess\n    </div>\n    <div className={infos} style={{\n      \"padding\": \"0\"\n    }}>\n      <div style={{\n        \"margin\": \"auto\",\n        \"width\": \"80%\"\n      }}>\nI first used Kinect to get the depth data of the scene &#8594;\n      </div>\n      <img style={{\n        \"width\": \"100%\"\n      }} src={depthCam} alt={\"depth data image from Kinect camera\"} />\n    </div>\n    <div className={infos} style={{\n      \"padding\": \"0\"\n    }}>\n      <img style={{\n        \"width\": \"100%\"\n      }} src={pointCloud} alt={\"point cloud created from depth data obtained from Kinect camera\"} />\n      <div style={{\n        \"margin\": \"auto\",\n        \"width\": \"80%\"\n      }}> &#8592; Then I created point cloud with the depth information as z </div>\n    </div>\n    <div className={infos} style={{\n      \"padding\": \"0\"\n    }}>\n      <div style={{\n        \"margin\": \"auto\",\n        \"width\": \"80%\"\n      }}>\nI then divided the points into 6 buckets based on their depth range with HSB color value, which is also based on depth &#8594;\n      </div>\n      <img style={{\n        \"width\": \"100%\"\n      }} src={depthInfo} alt={\"point cloud points divided into 6 buckets, sorted by color\"} />\n    </div>\n    <div className={infos} style={{\n      \"padding\": \"0\"\n    }}>\n      <img style={{\n        \"width\": \"100%\"\n      }} src={buckets} alt={\"point cloud points above put into triangular mesh by connecting adjacent three points\"} />\n      <div style={{\n        \"margin\": \"auto\",\n        \"width\": \"80%\"\n      }}> &#8592; I also created triangular mesh out of points per bucket </div>\n    </div>\n    <div className={infos} style={{\n      \"padding\": \"0\"\n    }}>\n      <div style={{\n        \"margin\": \"auto\",\n        \"width\": \"80%\"\n      }}>\nI wrote a function that would automatically save the data per layer every certain time interval \n(e.g. every minute, every 10 seconds, etc.)\n        <p>{`These are different views of Kinect `}{`â†’`}</p>\n        <p>{`(Starting with top left and clock-wise: depth data, RGB data, object outlines, compiled depth buckets in grayscale, individual bucket in grayscale)`}</p>\n      </div>\n      <img style={{\n        \"width\": \"100%\"\n      }} src={allViews} alt={\"different views and data obtained from Kinect camera. Starting with top left and clock-wise: depth data, RGB data (normal camera), object outlines, compiled depth buckets in grayscale, individual bucket in grayscale.\"} />\n    </div>\n    <div className={subTitle} style={{\n      \"marginTop\": \"3rem\"\n    }}>\nHow It works\n    </div>\n    <div style={{\n      \"marginBottom\": \"3rem\"\n    }}>\nUpon pressing a button to capture, the program generates 6 random numbers and sorts them in order to pull captured layers in chronological order. It then combines the layers all together by taking the biggest pixel value across 6 layer images. Once the image is constructed, it frames in a polaroid template with location and timeframe (also saved and retrieved in the same manner as the layers) below the image.\n    </div>\n    <div style={{\n      \"margin\": \"auto\",\n      \"justifyContent\": \"center\",\n      \"display\": \"flex\"\n    }}>\n      <img style={{\n        \"width\": \"40%\",\n        \"boxShadow\": \"0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%)\"\n      }} src={final} alt={\"Example snapshot outputs.\"} />\n    </div>\n    <div className={subTitle} style={{\n      \"marginTop\": \"3rem\"\n    }}>\nExhibition Installation\n    </div>\n    <div style={{\n      \"margin\": \"auto\",\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"flexWrap\": \"wrap\",\n      \"justifyContent\": \"center\"\n    }}>\n      <img style={{\n        \"width\": \"40%\",\n        \"boxShadow\": \"0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%)\",\n        \"marginRight\": \"1rem\",\n        \"marginBottom\": \"1rem\"\n      }} src={exhibition1} alt={\"Exhibition of Snapshot at The STUDIO for Creative Inquiry.\"} />\n      <img style={{\n        \"width\": \"40%\",\n        \"boxShadow\": \"0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%)\",\n        \"marginRight\": \"1rem\",\n        \"marginBottom\": \"1rem\"\n      }} src={exhibition4} alt={\"Exhibition of Snapshot at The STUDIO for Creative Inquiry.\"} />\n      <img style={{\n        \"width\": \"40%\",\n        \"boxShadow\": \"0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%)\",\n        \"marginRight\": \"1rem\",\n        \"marginBottom\": \"1rem\"\n      }} src={exhibition2} alt={\"Exhibition of Snapshot at The STUDIO for Creative Inquiry.\"} />\n      <img style={{\n        \"width\": \"40%\",\n        \"boxShadow\": \"0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%)\",\n        \"marginRight\": \"1rem\",\n        \"marginBottom\": \"1rem\"\n      }} src={exhibition3} alt={\"Exhibition of Snapshot at The STUDIO for Creative Inquiry.\"} />\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","className","infogrid","overview","parentName","closerLineHeight","infos","info","subTitle","style","src","depthCam","alt","pointCloud","depthInfo","buckets","allViews","final","exhibition1","exhibition4","exhibition2","exhibition3","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}